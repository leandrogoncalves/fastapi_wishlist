services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wishlist-app
    environment:
      - PYTHONPATH=/app
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/
    restart: unless-stopped
    platform: linux/amd64
    networks:
      - api_network

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: wishlist-test
    environment:
      - PYTHONPATH=/app
    volumes:
      - ./app:/app/
    restart: unless-stopped
    command: pytest --cov --cov-report=html --cov-fail-under=80 --cov-report xml:coverage.xml && coverage xml -o coverage.xml
    profiles:
      - tests
    platform: linux/amd64
    networks:
      - api_network


  database:
    image: postgres:16
    container_name: wishlist-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./docker/postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - api_network

volumes:
  postgres_data:

networks:
  api_network:
    driver: bridge